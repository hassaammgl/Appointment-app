name: üöÄ Deploy Smart Visitors App to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Debug SSH (optional sanity check)
      - name: Debug SSH connection
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: whoami

      # Step 3: Deploy backend + frontend
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "üöÄ Starting deployment on VPS..."

            # Update server packages
            sudo apt update -y && sudo apt upgrade -y

            # Go to app directory
            cd ${{ secrets.VPS_APP_PATH }}

            # Pull latest changes
            git pull origin main

            # Build frontend
            cd client
            npm install --legacy-peer-deps
            npm run build

            # Move build to Nginx directory
            sudo rsync -a --delete ./dist/ /var/www/smart-visitors/dist/
            cd ..

            # Restart backend with PM2
            if pm2 list | grep -q "smart-visitors"; then
              echo "üîÅ Restarting PM2 process..."
              pm2 restart smart-visitors --update-env
            else
              echo "üî• Starting new PM2 process..."
              pm2 start index.js --name "smart-visitors" --port 5000
            fi

            # Save PM2 state and reload Nginx
            pm2 save
            sudo systemctl reload nginx

            echo "‚úÖ Deployment complete!"

      # Step 4: Notify Discord on success
      - name: Notify Discord (Success)
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
            -d '{"username":"DeployBot ü§ñ","embeds":[{"title":"‚úÖ Smart Visitors Deployed!","description":"The app is live on **https://visitor.sapps.site** üöÄ and api on **https://visitor.sapps.site/api/ping**","color":5763719,"timestamp":"'"$(date -u +%FT%T.%3NZ)"'"}]}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      # Step 5: Notify Discord on failure
      - name: Notify Discord (Failure)
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
            -d '{"username":"DeployBot ü§ñ","embeds":[{"title":"‚ùå Deployment Failed","description":"Something went wrong during deployment üò≠ Check GitHub logs!","color":15548997,"timestamp":"'"$(date -u +%FT%T.%3NZ)"'"}]}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
